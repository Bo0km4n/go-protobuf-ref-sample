// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/Bo0km4n/go-protobuf-ref-sample/user/handler/grpc/user/user.proto

package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	TeamId               int64    `protobuf:"varint,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
	IsOwner              bool     `protobuf:"varint,8,opt,name=isOwner" json:"isOwner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_5006bb553d262573, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetTeamId() int64 {
	if m != nil {
		return m.TeamId
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetIsOwner() bool {
	if m != nil {
		return m.IsOwner
	}
	return false
}

type ActivateRequest struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivateRequest) Reset()         { *m = ActivateRequest{} }
func (m *ActivateRequest) String() string { return proto.CompactTextString(m) }
func (*ActivateRequest) ProtoMessage()    {}
func (*ActivateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_5006bb553d262573, []int{1}
}
func (m *ActivateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateRequest.Unmarshal(m, b)
}
func (m *ActivateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateRequest.Marshal(b, m, deterministic)
}
func (dst *ActivateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateRequest.Merge(dst, src)
}
func (m *ActivateRequest) XXX_Size() int {
	return xxx_messageInfo_ActivateRequest.Size(m)
}
func (m *ActivateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateRequest proto.InternalMessageInfo

func (m *ActivateRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type ActivateResponse struct {
	Token                string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivateResponse) Reset()         { *m = ActivateResponse{} }
func (m *ActivateResponse) String() string { return proto.CompactTextString(m) }
func (*ActivateResponse) ProtoMessage()    {}
func (*ActivateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_5006bb553d262573, []int{2}
}
func (m *ActivateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateResponse.Unmarshal(m, b)
}
func (m *ActivateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateResponse.Marshal(b, m, deterministic)
}
func (dst *ActivateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateResponse.Merge(dst, src)
}
func (m *ActivateResponse) XXX_Size() int {
	return xxx_messageInfo_ActivateResponse.Size(m)
}
func (m *ActivateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateResponse proto.InternalMessageInfo

func (m *ActivateResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Users struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=Users" json:"Users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Users) Reset()         { *m = Users{} }
func (m *Users) String() string { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()    {}
func (*Users) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_5006bb553d262573, []int{3}
}
func (m *Users) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Users.Unmarshal(m, b)
}
func (m *Users) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Users.Marshal(b, m, deterministic)
}
func (dst *Users) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Users.Merge(dst, src)
}
func (m *Users) XXX_Size() int {
	return xxx_messageInfo_Users.Size(m)
}
func (m *Users) XXX_DiscardUnknown() {
	xxx_messageInfo_Users.DiscardUnknown(m)
}

var xxx_messageInfo_Users proto.InternalMessageInfo

func (m *Users) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_5006bb553d262573, []int{4}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*User)(nil), "user.User")
	proto.RegisterType((*ActivateRequest)(nil), "user.ActivateRequest")
	proto.RegisterType((*ActivateResponse)(nil), "user.ActivateResponse")
	proto.RegisterType((*Users)(nil), "user.Users")
	proto.RegisterType((*Empty)(nil), "user.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserAPIClient is the client API for UserAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserAPIClient interface {
	GetUsers(ctx context.Context, in *User, opts ...grpc.CallOption) (*Users, error)
	Show(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	Delete(ctx context.Context, in *User, opts ...grpc.CallOption) (*Empty, error)
	Invite(ctx context.Context, in *User, opts ...grpc.CallOption) (*Empty, error)
	Activate(ctx context.Context, in *ActivateRequest, opts ...grpc.CallOption) (*ActivateResponse, error)
}

type userAPIClient struct {
	cc *grpc.ClientConn
}

func NewUserAPIClient(cc *grpc.ClientConn) UserAPIClient {
	return &userAPIClient{cc}
}

func (c *userAPIClient) GetUsers(ctx context.Context, in *User, opts ...grpc.CallOption) (*Users, error) {
	out := new(Users)
	err := c.cc.Invoke(ctx, "/user.UserAPI/GetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAPIClient) Show(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/user.UserAPI/Show", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAPIClient) Delete(ctx context.Context, in *User, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/user.UserAPI/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAPIClient) Invite(ctx context.Context, in *User, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/user.UserAPI/Invite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAPIClient) Activate(ctx context.Context, in *ActivateRequest, opts ...grpc.CallOption) (*ActivateResponse, error) {
	out := new(ActivateResponse)
	err := c.cc.Invoke(ctx, "/user.UserAPI/Activate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserAPI service

type UserAPIServer interface {
	GetUsers(context.Context, *User) (*Users, error)
	Show(context.Context, *User) (*User, error)
	Delete(context.Context, *User) (*Empty, error)
	Invite(context.Context, *User) (*Empty, error)
	Activate(context.Context, *ActivateRequest) (*ActivateResponse, error)
}

func RegisterUserAPIServer(s *grpc.Server, srv UserAPIServer) {
	s.RegisterService(&_UserAPI_serviceDesc, srv)
}

func _UserAPI_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAPIServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserAPI/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAPIServer).GetUsers(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAPI_Show_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAPIServer).Show(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserAPI/Show",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAPIServer).Show(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAPI_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAPIServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserAPI/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAPIServer).Delete(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAPI_Invite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAPIServer).Invite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserAPI/Invite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAPIServer).Invite(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAPI_Activate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAPIServer).Activate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserAPI/Activate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAPIServer).Activate(ctx, req.(*ActivateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.UserAPI",
	HandlerType: (*UserAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUsers",
			Handler:    _UserAPI_GetUsers_Handler,
		},
		{
			MethodName: "Show",
			Handler:    _UserAPI_Show_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _UserAPI_Delete_Handler,
		},
		{
			MethodName: "Invite",
			Handler:    _UserAPI_Invite_Handler,
		},
		{
			MethodName: "Activate",
			Handler:    _UserAPI_Activate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/Bo0km4n/go-protobuf-ref-sample/user/handler/grpc/user/user.proto",
}

func init() {
	proto.RegisterFile("github.com/Bo0km4n/go-protobuf-ref-sample/user/handler/grpc/user/user.proto", fileDescriptor_user_5006bb553d262573)
}

var fileDescriptor_user_5006bb553d262573 = []byte{
	// 365 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0x4d, 0x6f, 0xda, 0x40,
	0x14, 0xc4, 0x60, 0x63, 0xf3, 0x90, 0xda, 0x6a, 0xd5, 0x8f, 0x15, 0x27, 0x6b, 0x2b, 0x24, 0xf7,
	0x00, 0xae, 0x68, 0x6f, 0x3d, 0x51, 0xb5, 0xaa, 0x50, 0x0f, 0xad, 0x1c, 0xe5, 0x1c, 0x19, 0xfb,
	0x01, 0x2b, 0x6c, 0xaf, 0xb3, 0xbb, 0x06, 0xe5, 0x57, 0xe4, 0xf7, 0xe5, 0xdf, 0x44, 0xde, 0x85,
	0x40, 0x50, 0x94, 0x8b, 0x35, 0x33, 0x6f, 0xfc, 0x3e, 0x66, 0xe1, 0xef, 0x9a, 0xeb, 0x4d, 0xb3,
	0x9c, 0x66, 0xa2, 0x8c, 0x7f, 0x8a, 0xaf, 0xdb, 0xf2, 0x7b, 0x15, 0xaf, 0xc5, 0xa4, 0x96, 0x42,
	0x8b, 0x65, 0xb3, 0x9a, 0x48, 0x5c, 0x4d, 0x54, 0x5a, 0xd6, 0x05, 0xc6, 0x8d, 0x42, 0x19, 0x6f,
	0xd2, 0x2a, 0x2f, 0x50, 0xc6, 0x6b, 0x59, 0x67, 0x56, 0x69, 0x3f, 0x53, 0xe3, 0x27, 0x6e, 0x8b,
	0xd9, 0xbd, 0x03, 0xee, 0xb5, 0x42, 0x49, 0xde, 0x40, 0x97, 0xe7, 0xd4, 0x09, 0x9d, 0xa8, 0x97,
	0x74, 0x79, 0x4e, 0x3e, 0x81, 0xaf, 0x31, 0x2d, 0x6f, 0x78, 0x4e, 0xbb, 0x46, 0xec, 0xb7, 0x74,
	0x91, 0x13, 0x02, 0x6e, 0x95, 0x96, 0x48, 0x7b, 0xa1, 0x13, 0x0d, 0x12, 0x83, 0xc9, 0x7b, 0xf0,
	0xb0, 0x4c, 0x79, 0x41, 0x5d, 0x23, 0x5a, 0x42, 0x46, 0x10, 0xd4, 0xa9, 0x52, 0x7b, 0x21, 0x73,
	0xea, 0x99, 0xc2, 0x13, 0x27, 0x14, 0x7c, 0xae, 0xfe, 0xed, 0x2b, 0x94, 0x34, 0x08, 0x9d, 0x28,
	0x48, 0x8e, 0x94, 0x8d, 0xe1, 0xed, 0x3c, 0xd3, 0x7c, 0x97, 0x6a, 0x4c, 0xf0, 0xb6, 0x41, 0xa5,
	0xdb, 0x91, 0x99, 0xc8, 0xd1, 0x6c, 0x37, 0x48, 0x0c, 0x66, 0x11, 0xbc, 0x3b, 0xd9, 0x54, 0x2d,
	0x2a, 0x65, 0xd6, 0xd0, 0x62, 0x8b, 0xd5, 0xc1, 0x68, 0x09, 0xfb, 0x02, 0x5e, 0x7b, 0xa1, 0x22,
	0xe1, 0x01, 0x50, 0x27, 0xec, 0x45, 0xc3, 0x19, 0x4c, 0x4d, 0x1a, 0xad, 0x94, 0xd8, 0x02, 0xf3,
	0xc1, 0xfb, 0x5d, 0xd6, 0xfa, 0x6e, 0xf6, 0xe0, 0x80, 0xdf, 0x4a, 0xf3, 0xff, 0x0b, 0x32, 0x86,
	0xe0, 0x0f, 0x6a, 0xdb, 0xe2, 0xec, 0x9f, 0xd1, 0xf0, 0x84, 0x15, 0xeb, 0x90, 0x10, 0xdc, 0xab,
	0x8d, 0xd8, 0x3f, 0xb3, 0x9c, 0x61, 0xd6, 0x21, 0x9f, 0xa1, 0xff, 0x0b, 0x0b, 0xd4, 0xf8, 0x52,
	0x1b, 0x33, 0xd7, 0x9a, 0x16, 0xd5, 0x8e, 0xbf, 0x6e, 0xfa, 0x01, 0xc1, 0xf1, 0x78, 0xf2, 0xc1,
	0x96, 0x2e, 0x32, 0x1b, 0x7d, 0xbc, 0x94, 0x6d, 0x46, 0xac, 0xb3, 0xec, 0x9b, 0xf7, 0xff, 0xf6,
	0x18, 0x00, 0x00, 0xff, 0xff, 0xa1, 0xa0, 0x33, 0x8e, 0x4e, 0x02, 0x00, 0x00,
}
